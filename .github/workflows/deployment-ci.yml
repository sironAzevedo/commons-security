name: commons-security

on:
  push:
    branches-ignore:
      - main

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: Configure Maven settings
          run: |
            mkdir -p ~/.m2
            echo "<settings><servers><server><id>github</id><username>\${env.GITHUB_ACTOR}</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          env:
            GITHUB_ACTOR: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        - name: Cache Maven dependencies
          uses: actions/cache@v3
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-
        - name: Build with Maven
          run: mvn clean install -DskipTests
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    test:
      runs-on: ubuntu-latest
      name: Running tests
      needs: build
      steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17
        - name: Configure Maven settings
          run: |
            mkdir -p ~/.m2
            echo "<settings><servers><server><id>github</id><username>\${env.GITHUB_ACTOR}</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          env:
            GITHUB_ACTOR: ${{ github.actor }}
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        - name: Cache Maven dependencies
          uses: actions/cache@v3
          with:
            path: ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-
        - name: Run unit tests
          run: mvn test
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    create_pr:
      runs-on: ubuntu-latest
      needs: [build, test]
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Create Pull Request
          uses: peter-evans/create-pull-request@v5
          with:
            token: ${{ secrets.GH_TOKEN }}
            commit-message: 'Automatic PR: Merge changes to main'
            branch: ${{ github.ref }}
            base: main
            title: 'Automatic PR from ${{ github.ref_name }}'
            body: |
              Este PR foi criado automaticamente pelo fluxo de trabalho de CI para mesclar alterações de ${{ github.ref_name }} para main.